{"version":3,"file":"extension.js","sources":["../../../../src/Logic/BTValidator.ts","../../../../src/EventHandlers/BTEventHandler.ts","../../../../src/Index.ts"],"sourcesContent":["import { Layout } from \"@docsvision/webclient/System/Layout\";\r\nimport { TextBox } from \"@docsvision/webclient/Platform/TextBox\";\r\nimport { DateTimePicker } from \"@docsvision/webclient/Platform/DateTimePicker\";\r\n\r\nexport interface CheckResult {\r\n    ok: boolean;\r\n    msg?: string;\r\n}\r\n\r\nexport function getTextValue(layout: Layout, controlName: string): string | null {\r\n    const ctrl = layout.controls.get<TextBox>(controlName);\r\n    if (!ctrl) return null;\r\n\r\n    return (ctrl as any).value ?? null;\r\n}\r\n\r\nexport function getDateValue(layout: Layout, controlName: string): Date | null {\r\n    const ctrl = layout.controls.get<DateTimePicker>(controlName);\r\n    if (!ctrl) return null;\r\n\r\n    const raw = (ctrl as any).value as any;\r\n    if (!raw) return null;\r\n\r\n    if (raw instanceof Date) {\r\n        return raw;\r\n    }\r\n\r\n    const parsed = new Date(raw);\r\n    return isNaN(parsed.getTime()) ? null : parsed;\r\n}\r\n\r\nexport function validateReasonBT(layout: Layout): CheckResult {\r\n    const reason = getTextValue(layout, \"reasonBT\");\r\n\r\n    if (!reason || reason.trim() === \"\") {\r\n        return {\r\n            ok: false,\r\n            msg: \"Основание для поездки не заполнено, cохранение отменено!\"\r\n        };\r\n    }\r\n\r\n    return { ok: true };\r\n}\r\n\r\nexport function validateDates(layout: Layout): CheckResult {\r\n    const fromDate = getDateValue(layout, \"dateStartBT\");\r\n    const toDate = getDateValue(layout, \"dateFinishBT\");\r\n\r\n    if (!fromDate || !toDate) {\r\n        return { ok: true };\r\n    }\r\n\r\n    if (toDate < fromDate) {\r\n        return {\r\n            ok: false,\r\n            msg: \"'Дата по' не может быть раньше 'даты с'!\"\r\n        };\r\n    }\r\n\r\n    return { ok: true };\r\n}\r\n\r\nexport function collectCardInfo(layout: Layout) {\r\n    const title = getTextValue(layout, \"cardName\") ?? \"(без названия)\";\r\n    const created = getDateValue(layout, \"cardDate\")\r\n    const reason = getTextValue(layout, \"reasonBT\") ?? \"(без основания)\";\r\n    const fromDate = getDateValue(layout, \"dateStartBT\");\r\n    const toDate = getDateValue(layout, \"dateFinishBT\");\r\n    const cityDDR = layout.controls.get(\"city\");\r\n    const city = (cityDDR as any).value.name ?? null;\r\n\r\n    function parseDate(d: Date | null | undefined): string {\r\n        if (!d) return \"(не указана)\";\r\n\r\n        if (!(d instanceof Date)) {\r\n            const tryDate = new Date(d as any);\r\n            if (!isNaN(tryDate.getTime())) return parseDate(tryDate);\r\n            return String(d);\r\n        }\r\n\r\n        const dd = String(d.getDate()).padStart(2, \"0\");\r\n        const mm = String(d.getMonth() + 1).padStart(2, \"0\");\r\n        const yyyy = d.getFullYear();\r\n        const hh = String(d.getHours()).padStart(2, \"0\");\r\n        const min = String(d.getMinutes()).padStart(2, \"0\");\r\n        return `${dd}.${mm}.${yyyy} ${hh}:${min}`;\r\n    }\r\n\r\n    return {\r\n        title,\r\n        created: parseDate(created),\r\n        fromDate: parseDate(fromDate),\r\n        toDate: parseDate(toDate),\r\n        city,\r\n        reason\r\n    };\r\n}\r\n","import { Layout } from \"@docsvision/webclient/System/Layout\";\r\nimport { IEventArgs } from \"@docsvision/webclient/System/IEventArgs\";\r\nimport { MessageBox } from \"@docsvision/webclient/Helpers/MessageBox/MessageBox\";\r\nimport { CancelableEventArgs } from \"@docsvision/webclient/System/CancelableEventArgs\";\r\nimport { ICardSavingEventArgs } from \"@docsvision/webclient/System/ICardSavingEventArgs\";\r\nimport { validateReasonBT, validateDates, collectCardInfo } from \"../Logic/BTValidator\";\r\n\r\nexport async function checkCardBeforeSave(layout: Layout, args: CancelableEventArgs<ICardSavingEventArgs>): Promise<void> {\r\n    if (!layout) return;\r\n\r\n    args.wait();\r\n    const checkReason = validateReasonBT(layout);\r\n\r\n    if (!checkReason.ok) {\r\n        await MessageBox.ShowWarning(checkReason.msg);\r\n        args.cancel();\r\n        return;\r\n    }\r\n\r\n    args.accept();\r\n}\r\n\r\nexport async function checkDateChanged(sender: any, e: IEventArgs): Promise<void> {\r\n    const layout: Layout = sender.layout ?? sender;\r\n\r\n    const dateCheck = validateDates(layout);\r\n    if (!dateCheck.ok && dateCheck.msg) {\r\n        await MessageBox.ShowWarning(dateCheck.msg);\r\n    }\r\n}\r\n\r\nexport async function clickToCollectCardInfo(sender: any, e: IEventArgs): Promise<void> {\r\n    const layout: Layout = sender.layout ?? sender;\r\n\r\n    const info = collectCardInfo(layout);\r\n\r\n    const text =\r\n        \"Карточка: \" + info.title + \"\\n\" +\r\n        \"Создана: \" + info.created + \"\\n\" +\r\n        \"Дата с: \" + info.fromDate + \"\\n\" +\r\n        \"Дата по: \" + info.toDate + \"\\n\" +\r\n        \"Город: \" + info.city + \"\\n\" +\r\n        \"Основание: \" + info.reason;\r\n\r\n    await MessageBox.ShowInfo(text);\r\n}","﻿import { extensionManager } from \"@docsvision/webclient/System/ExtensionManager\";\r\nimport * as bteh from \"./EventHandlers/BTEventHandler\";\r\n\r\nextensionManager.registerExtension({\r\n    name: \"NGNR3Extension\",\r\n    version: \"1.0.0\",\r\n    globalEventHandlers: [bteh],\r\n    layoutServices: []\r\n});"],"names":["MessageBox","extensionManager"],"mappings":"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"}